program FindSaddlePoints;

type
malt = array[0..100,0..100] of integer;

var
mat: malt;
n,i,j: integer;

function smalRow(var mat: malt; i: integer; n: integer):integer;
var
smal,j : integer;

begin

    smal := mat[i][0];
    for j:= 1 to (n-1)do
    begin
        if (mat[i][j] < smal)then
        begin
            smal := mat[i][j];
        end;    
    end;
    smalRow := smal;
end;
function largCol(var mat: malt; j: integer; n: integer):integer;
var
larg,i: integer;
begin
    larg := mat[0][j];
    for i:= 1 to (n-1)do
    begin
        if (mat[i][j] > larg)then
        begin
            larg := mat[i][j];
        end;    
    end;
    largCol := larg;
end;
 
begin
    // size of the array 
    repeat
        write('Give the size of multi-dimensional array : ');
        read(n);
    until( n>1);
    
    //Filling a Multi-Dimensional Array
    for i := 0 to (n-1)do
    begin
        for j := 0 to (n-1)do
        begin
            write('Mat[',i,'][',j,'] : ');
            read(mat[i][j]);
        end;
    end;
    
    // Display the Multi-Dimensional array
    for i := 0 to (n-1)do
    begin
        for j := 0 to (n-1)do
        begin
            write(mat[i][j],' ' );
        end;
        writeln();

    end;
    
    //Dispaly the saddle point and its position if it exist
    for i:= 0 to n-1 do
    begin
        for j:= 0 to n-1 do
        begin
            if((largCol(mat,j,n) = mat[i][j]) and (smalRow(mat,i,n) = mat[i][j]))then
            begin
                writeln('Saddle point found: ',mat[i][j],' at position (',i,',',j,')');
            end;
        end;
    end;    
end.
